library(data.table)
library(ggplot2)
results <- fread("C:/Users/abusa/Documents/GitHub/ADC_Final/simulation_results.csv")
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point(shape = 16) +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
results <- na.omit(results)
View(results)
results <- fread("C:/Users/abusa/Documents/GitHub/ADC_Final/simulation_results.csv")
View(results)
rm(results)
results <- fread("C:/Users/abusa/Documents/GitHub/ADC_Final/simulation_results.csv")
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point(shape = 25) +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point(shape = 25, size = 30) +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point(shape = 25, size = 20) +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point(shape = 25, size = 15) +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point(shape = 25, size = 10) +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point(shape = 16, size = 10) +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point(shape = 16, size = 7) +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point(shape = 16) +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point(shape = 16) +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  +scale_shape_manual(values = c(16, 16,16, 16, 16, 25)))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point(shape = 16) +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  +scale_shape_manual(values = c(16, 16,16, 16, 16, 25))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point() +  scale_shape_manual(values = c(16, 16,16, 16, 16, 25))+  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
library(data.table)
library(ggplot2)
results <- fread("C:/Users/abusa/Documents/GitHub/ADC_Final/simulation_results.csv")
ggplot(results, aes(x = as.integer(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Signal Length",
x = "Length of signal (number of bits)",
y = "Average Hamming Distance of 1000 samples"
) + scale_color_discrete("# of bits exposed to noise", labels=c('0', '5', '30', '95')) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results_4_plot, aes(x = as.integer(noise_length), y = avg_hamming_distance, color = as.factor(length_signal))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Noise Length",
x = "Number of bits exposed to noise",
y = "Average Hamming Distance of 1000 samples"
) + scale_color_discrete("Signal length (# of bits)", labels=c('100', '200', '300', '400')) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results, aes(x = as.integer(noise_length), y = avg_hamming_distance, color = as.factor(length_signal))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Noise Length",
x = "Number of bits exposed to noise",
y = "Average Hamming Distance of 1000 samples"
) + scale_color_discrete("Signal length (# of bits)", labels=c('100', '200', '300', '400')) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results, aes(x = as.integer(noise_length), y = avg_hamming_distance, color = as.factor(length_signal))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Noise Length",
x = "Number of bits exposed to noise",
y = "Average Hamming Distance of 1000 samples"
) + scale_color_discrete("Signal length (# of bits)", labels=c('100', '200', '300', '400', '500')) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
View(results)
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("[Constraint Length, Parity Bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point() +  scale_shape_manual(values = c(16, 16,16, 16, 16, 25))+  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_line() +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("[Constraint Length, Parity Bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, group = as.factor(constraint_length))) +
geom_line() +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("[Constraint Length, Parity Bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
install.packages("plotly")
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, group = as.factor(constraint_length))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("[Constraint Length, Parity Bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
library(plotly)
plot_ly(x=results$length_signal, y=results$noise_length, z=as.factor(results$constraint_length), type="scatter3d", mode="markers", color=temp)
View(results)
plot_ly(x=results$length_signal, y=results$noise_length, z=results$avg_hamming_distance, type="scatter3d", mode="markers", color=as.factor(results$constraint_length))
plot_ly(x=results$length_signal, y=results$noise_length, z=results$avg_hamming_distance, type="scatter3d", mode="markers", color=as.factor(results$constraint_length))
devtools::install_github("AckerDWM/gg3D")
devtools::install_github("AckerDWM/gg3D", dependencies = TRUE)
library("gg3D")
## An empty plot with 3 axes
qplot(x=0, y=0, z=0, geom="blank") +
theme_void() +
axes_3D()
library("gg3D")
ggplot(results, aes(x=length_signal, y=noise_length, z=avg_hamming_distance, color=as.factor(constraint_length))) +
theme_void() +
axes_3D() +
stat_3D()
ggplot(results, aes(x=length_signal, z=noise_length, y=avg_hamming_distance, color=as.factor(constraint_length))) +
theme_void() +
axes_3D() +
stat_3D()
#library(plotly)
plot_ly(x=results$length_signal, y=results$noise_length, z=results$avg_hamming_distance, type="scatter3d", mode="markers", color=as.factor(results$constraint_length))
#library(plotly)
plot_ly(x=results$length_signal, y=results$noise_length, z=results$avg_hamming_distance, type="scatter3d", mode="markers", color=as.factor(results$constraint_length), offline= TRUE)
ggplot(results, aes(z=length_signal, z=noise_length, x=avg_hamming_distance, color=as.factor(constraint_length))) +
theme_void() +
axes_3D() +
stat_3D()
ggplot(results, aes(z=length_signal, z=noise_length, x=avg_hamming_distance, color=as.factor(constraint_length))) +
theme_void() +
axes_3D() +
stat_3D()
ggplot(results, aes(z=length_signal, y=noise_length, x=avg_hamming_distance, color=as.factor(constraint_length))) +
theme_void() +
axes_3D() +
stat_3D()
ggplot(results, aes(z=length_signal, y=noise_length, x=avg_hamming_distance, color=as.factor(constraint_length))) +
theme_void() +
axes_3D() +
stat_3D()
#library("gg3D")
ggplot(results, aes(z=length_signal, y=noise_length, x=avg_hamming_distance, color=as.factor(constraint_length))) +
theme_void() +
axes_3D() +
stat_3D()
ggplot(results, aes(z=length_signal,x=noise_length, y=avg_hamming_distance, color=as.factor(constraint_length))) +
theme_void() +
axes_3D() +
stat_3D()
results_300 <- subset(results, length_signal == 300)
ggplot(results_300, aes(x = as.integer(noise_length), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Noise Length",
x = "Number of bits exposed to noise",
y = "Average Hamming Distance of 1000 samples"
) + scale_color_discrete("Signal length (# of bits)", labels=c('100', '200', '300', '400', '500')) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results_300, aes(x = as.integer(noise_length), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Noise Length",
x = "Number of bits exposed to noise",
y = "Average Hamming Distance of 1000 samples"
) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results_300, aes(x = as.integer(noise_length), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_line(mapping  = as.factor(constraint_length) ) +  labs(
title = "Average Hamming Distance vs Noise Length",
x = "Number of bits exposed to noise",
y = "Average Hamming Distance of 1000 samples"
) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results_300, aes(x = as.integer(noise_length), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_line( ) +  labs(
title = "Average Hamming Distance vs Noise Length",
x = "Number of bits exposed to noise",
y = "Average Hamming Distance of 1000 samples"
) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results_300, aes(x = as.integer(noise_length), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point( ) +  labs(
title = "Average Hamming Distance vs Noise Length",
x = "Number of bits exposed to noise",
y = "Average Hamming Distance of 1000 samples"
) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("[Constraint Length, Parity Bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
results_54 <- subset(results, constraint_length = [5,4])
results_54 <- subset(results, constraint_length = "[5,4]")
ggplot(results_54, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("[Constraint Length, Parity Bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
View(results_54)
results_54 <- subset(results, constraint_length == "[5,4]")
results_54 <- subset(results, constraint_length == [5,4])
results_54 <- subset(results, constraint_length == '[5,4]')
results$constraint_length[1]
results_54 <- subset(results, constraint_length == '[5, 4]')
ggplot(results_54, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("[Constraint Length, Parity Bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
View(results_54)
ggplot(results_54, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_length))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) # + scale_color_discrete("[Constraint Length, Parity Bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
results$noise_percentage <- results$noise_length/ results$length_signal
results_54 <- subset(results, constraint_length == '[5, 4]')
ggplot(results_54, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_percentage))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Constraint Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) # + scale_color_discrete("[Constraint Length, Parity Bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
ggplot(results, aes(x = as.integer(length_signal), y = avg_hamming_distance, color = as.factor(noise_percentage))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Signal Length",
x = "Length of signal (number of bits)",
y = "Average Hamming Distance of 1000 samples"
) + scale_color_discrete("# of bits exposed to noise", labels=c('0', '5', '30', '95')) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results_54, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_percentage))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Signal Length for K,r = [5,4]",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Percentage of Noise", labels=c('0%', '25%', '50%', '75%', '100%'))
ggplot(results_54, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_percentage))) +
geom_point(size = 10) +  labs(
title = "Average Hamming Distance vs Signal Length for K,r = [5,4]",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Percentage of Noise", labels=c('0%', '25%', '50%', '75%', '100%'))
ggplot(results_54, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_percentage))) +
geom_point(size = 6) +  labs(
title = "Average Hamming Distance vs Signal Length for K,r = [5,4]",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Percentage of Noise", labels=c('0%', '25%', '50%', '75%', '100%'))
ggplot(results_54, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_percentage))) +
geom_point(size = 4) +  labs(
title = "Average Hamming Distance vs Signal Length for K,r = [5,4]",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Percentage of Noise", labels=c('0%', '25%', '50%', '75%', '100%'))
ggplot(results_54, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_percentage))) +
geom_point(size = 3) +  labs(
title = "Average Hamming Distance vs Signal Length for K,r = [5,4]",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Percentage of Noise", labels=c('0%', '25%', '50%', '75%', '100%'))
ggplot(results_54, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_percentage))) +
geom_point() +  labs(
title = "Average Hamming Distance vs Signal Length for K,r = [5,4]",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Percentage of Noise", labels=c('0%', '25%', '50%', '75%', '100%'))
ggplot(results_54, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_percentage))) +
geom_point(size = 4) +  labs(
title = "Average Hamming Distance vs Signal Length for K,r = [5,4]",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Percentage of Noise", labels=c('0%', '25%', '50%', '75%', '100%'))
ggplot(results_54, aes(x = as.factor(noise_percentage), y = avg_hamming_distance, color = as.factor(length_signal))) +
geom_point(size = 4) +  labs(
title = "Average Hamming Distance vs Signal Length for K,r = [5,4]",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Percentage of Noise", labels=c('0%', '25%', '50%', '75%', '100%'))
ggplot(results_54, aes(x = as.factor(noise_percentage), y = avg_hamming_distance, color = as.factor(length_signal))) +
geom_point(size = 4) +  labs(
title = "Average Hamming Distance vs Signal Length for K,r = [5,4]",
x = "Percentage Exposed to Noise (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Signal Length (# of bits)", labels=c('100', '200', '300', '400', '500'))
ggplot(results_54, aes(x = as.factor(noise_percentage), y = avg_hamming_distance, color = as.factor(length_signal))) +
geom_point(size = 3) +  labs(
title = "Average Hamming Distance vs Signal Length for K,r = [5,4]",
x = "Percentage Exposed to Noise (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Signal Length (# of bits)", labels=c('100', '200', '300', '400', '500'))
ggplot(results_54, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_percentage))) +
geom_point(size = 3) +  labs(
title = "Average Hamming Distance vs Signal Length for K,r = [5,4]",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Percentage of Noise", labels=c('0%', '25%', '50%', '75%', '100%'))
ggplot(results_54, aes(x = as.factor(noise_percentage), y = avg_hamming_distance, color = as.factor(length_signal))) +
geom_point(size = 3) +  labs(
title = "Average Hamming Distance vs Percent Noise for K,r = [5,4]",
x = "Percentage Exposed to Noise",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Signal Length (# of bits)", labels=c('100', '200', '300', '400', '500'))
ggplot(results_300, aes(x = as.integer(noise_length), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point(size =3 ) +  labs(
title = "Average Hamming Distance vs Noise Length",
x = "Number of bits exposed to noise",
y = "Average Hamming Distance of 1000 samples"
) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ggplot(results_300, aes(x = as.integer(noise_length), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point(size =3 ) +  labs(
title = "Average Hamming Distance vs Noise Length",
x = "Number of bits exposed to noise",
y = "Average Hamming Distance of 1000 samples"
) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) + scale_color_discrete("[Constraint length, # of parity bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_percentage))) +
geom_point(size = 3) +  labs(
title = "Average Hamming Distance vs Signal Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Percentage of Noise", labels=c('0%', '25%', '50%', '75%', '100%'))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_percentage))) +
geom_point(size = 2) +  labs(
title = "Average Hamming Distance vs Signal Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Percentage of Noise", labels=c('0%', '25%', '50%', '75%', '100%'))
ggplot(results, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point(size = 2) +  labs(
title = "Average Hamming Distance vs Signal Length",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("[Constraint length, # of parity bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
ggplot(results, aes(x = as.factor(noise_length), y = avg_hamming_distance, color = as.factor(length_signal))) +
geom_point(size = 3) +  labs(
title = "Average Hamming Distance vs Length of Noise",
x = "Number of Bits Exposed to Noise",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Signal Length (# of bits)", labels=c('100', '200', '300', '400', '500'))
ggplot(results, aes(x = as.factor(noise_length), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point(size = 3) +  labs(
title = "Average Hamming Distance vs Length of Noise",
x = "Number of Bits Exposed to Noise",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("[Constraint length, # of parity bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
ggplot(results, aes(x = as.factor(noise_percentage), y = avg_hamming_distance, color = as.factor(length_signal))) +
geom_point(size = 3) +  labs(
title = "Average Hamming Distance vs Percent Noise",
x = "Percentage of Bits Exposed to Noise",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Signal Length (# of bits)", labels=c('100', '200', '300', '400', '500'))
ggplot(results, aes(x = as.factor(noise_percentage), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point(size = 3) +  labs(
title = "Average Hamming Distance vs Percent Noise",
x = "Percentage of Bits Exposed to Noise",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("[Constraint length, # of parity bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
ggplot(results_54, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point(size = 2) +  labs(
title = "Average Hamming Distance vs Signal Length for Constraint Length = 5 and # of Parity Bits = 4",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("[Constraint length, # of parity bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
results_100noise <- subset(results, noise_percentage == 1.00)
ggplot(results_100noise, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point(size = 2) +  labs(
title = "Average Hamming Distance vs Signal Length for 100% of bits exposed to noise",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("[Constraint length, # of parity bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
ggplot(results_54, aes(x = as.factor(length_signal), y = avg_hamming_distance, color = as.factor(noise_percentage))) +
geom_point(size = 2) +  labs(
title = "Average Hamming Distance vs Signal Length for Window =5, # Parity Bits = 4",
x = "Signal length (# of bits)",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Percentage of Noise", labels=c('0%', '25%', '50%', '75%', '100%'))
ggplot(results_54, aes(x = as.factor(noise_length), y = avg_hamming_distance, color = as.factor(length_signal))) +
geom_point(size = 3) +  labs(
title = "Average Hamming Distance vs Length of Noise for Window =5, # Parity Bits = 4",
x = "Number of Bits Exposed to Noise",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Signal Length (# of bits)", labels=c('100', '200', '300', '400', '500'))
ggplot(results_300, aes(x = as.factor(noise_length), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point(size = 3) +  labs(
title = "Average Hamming Distance vs Length of Noise for signal length = 300",
x = "Number of Bits Exposed to Noise",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("[Constraint length, # of parity bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
ggplot(results_54, aes(x = as.factor(noise_percentage), y = avg_hamming_distance, color = as.factor(length_signal))) +
geom_point(size = 3) +  labs(
title = "Average Hamming Distance vs Percent Noise  for Window =5, # Parity Bits = 4",
x = "Percentage of Bits Exposed to Noise",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("Signal Length (# of bits)", labels=c('100', '200', '300', '400', '500'))
ggplot(results_300, aes(x = as.factor(noise_percentage), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point(size = 3) +  labs(
title = "Average Hamming Distance vs Percent Noise for signal length = 300",
x = "Percentage of Bits Exposed to Noise",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("[Constraint length, # of parity bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
results_300 <- subset(results, length_signal == 300)
ggplot(results_300, aes(x = as.factor(noise_percentage), y = avg_hamming_distance, color = as.factor(constraint_length))) +
geom_point(size = 3) +  labs(
title = "Average Hamming Distance vs Percent Noise for signal length = 300",
x = "Percentage of Bits Exposed to Noise",
y = "Average Hamming Distance of 1000 samples"
) +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))  + scale_color_discrete("[Constraint length, # of parity bits]", labels=c('[3,2]', '[5,2]', '[5,4]'))
